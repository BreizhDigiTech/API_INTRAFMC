type Category {
  id: ID!
  name: String!
  description: String
  created_at: String
  products: [ProductCBD!]!
}

input CreateCategoryInput {
  name: String!
  description: String
}

input UpdateCategoryInput {
  name: String
  description: String
}

extend type ProductCBD {
  category: Category
  categories: [Category!]!
}

extend type Query {
  categories: [Category!]! @guard(with: ["api"]) @field(resolver: "App\\Modules\\Category\\GraphQL\\Queries\\CategoryQuery@categories")
  category(id: ID!): Category @guard(with: ["api"]) @field(resolver: "App\\Modules\\Category\\GraphQL\\Queries\\CategoryQuery@category")
}

extend type Mutation {
  createCategory(input: CreateCategoryInput!): Category
    @guard(with: ["api"])
    @field(resolver: "App\\Modules\\Category\\GraphQL\\Mutations\\CategoryMutator@createCategory")

  updateCategory(id: ID!, input: UpdateCategoryInput!): Category
    @guard(with: ["api"])
    @field(resolver: "App\\Modules\\Category\\GraphQL\\Mutations\\CategoryMutator@updateCategory")

  deleteCategory(id: ID!): DeleteResponse
    @guard(with: ["api"])
    @field(resolver: "App\\Modules\\Category\\GraphQL\\Mutations\\CategoryMutator@deleteCategory")

  attachCategoryToProduct(category_id: ID!, product_id: ID!): Category
    @guard(with: ["api"])
    @field(resolver: "App\\Modules\\Category\\GraphQL\\Mutations\\CategoryMutator@attachCategoryToProduct")

  detachCategoryFromProduct(category_id: ID!, product_id: ID!): Category
    @guard(with: ["api"])
    @field(resolver: "App\\Modules\\Category\\GraphQL\\Mutations\\CategoryMutator@detachCategoryFromProduct")
}